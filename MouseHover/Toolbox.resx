<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="shrinkCursor.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABsFJREFUeF7t
        nU1oFVcUx1WSSDQ2FvwAFSsiUWoihYDQEkRFEBEEN+JKREWkUCRIcVNF3ejK0J2kGCSVImYhLtRFsCpY
        zEJdaCI2KvhNo0gjmlREc3r+w7wQMyfm3XvunZn3vD/4UZs387/vnvDezNy5czMhEAgEAoFAIBAIBAKB
        QCAQCKQMEeXVWraR3coeZNvY82wX28P2xv/F/+PneB3bYXvsh/2lXOeqkAIztJL9jt3NtrN/s69ZE7A9
        9sP+yEEecqX2nKhCCszAOvZntpN9x7oEechFPtqR2lepQgpM0e/ZVvYfNg3QDtpDu9L7sVILEnKrJwbZ
        39gGNlFQU7UkOp0nPdPH7me/YhOFLVYtiU7nyZT4i21iE8UtRi2JTufJFPmX/YlNFHg8tSQ6nScz4Fe2
        ik0Ueiy1JDqdJzPid/ZrNlFsSRVSoANxUOtgSxm8/6IOziqkQKUV7B9sOYB+oD9SP4dVIQUqLTdaWKmf
        w6qQAhX+yJYj6JfU30gVUqClP7A4lStH0C/0T+p3XElLpEALa9hrbDmD/qGfif6rkAIt/IX9EkA/E/1X
        IQUa+i2LMZWS5N07o9Fv9BP9/aQGKkaHWXiCLSkePHhAhw4dorq6Onr+/Hn806JBfz+pgYrRYYbi1p/r
        Gyhe6O/vp9bWVlqxYgVNnDgRVaNVq1bFrxqB/qLfw3VQMTLIQtzcyC3v37+nc+fO0aZNm6i6ujoq+kiP
        HTsWb2kM+j1cBxUjgwz9hu1nc8f169epubmZZs2alSh6wcrKSnr58mW8hzHoN/of1UJFIcRC3GPNDc+e
        PaMjR45QfX19otiS69ati/e0Bv2PaqGiEGLhn2ymvHnzhtrb22nNmjU0adKkRJE/54kT6nMH9D+qhYpC
        iKGY6oH7qqnz8eNH6uzspC1btlBNTU2isMU4efJkev3adLZLAvQfdeBIBQiwsJlNle7ubtq7dy/NnTs3
        UVBTN27cGKeqQR04UgECDK1mUzn37+vro5aWFmpsbEwUUeOpU6fiFtSgDtWcaQ8HmIpzYMw888Lg4CCd
        Pn2a1q9fH52p4C26dOrUqfT27du4NTWoQyPn2sMBpm5j/2OdMTQ0RFeuXKGdO3dSbW2tWDhXbt68OW7V
        CajDNs61hwNMxQTYIVbN/fv3ad++fbRw4UKxWD48c+ZM3LoTUIeDnGsPB5h6nFXx+PFjWrlypVggn+LT
        ZTj4VgzHOdseDjAVU8HV3Lx5k5YsWSIWypdbt2LmunPOc7Y9HGAq5uM7YWBggHbs2CEWy4cXLlyIW3ZK
        F2fbwwGmdrNO6ejooOnTp4tFc+WMGTOiwTkPdHO+PRxgKp5Mcc6jR4+oqalJLJ4Ld+3aFbfknF7Ot4cD
        THX+CSjw4cMHOnDgAFVUVIhF1Hjp0qW4Feek/glwdgwYi6tXr9L8+fPFQto4Z86caAzJE6kfA5ycBY0H
        robx9ly4ezceFfNG6mdB6uuA8bh8+TJNmTJFLKaN1655nTGT+nWAsythCRRr2rRpYiFtXLBgQTTU4YlM
        roSdjwUVuHHjhvOxIAxheySTsSAvo6G3bt2imTNnikXUiCtuj2QyGur8fsDdu3dp9uzZYgE1Ll68OG7B
        G5ncD4DO7ohhRHTevHliASW3b99ODQ0N4muj3b8fD0B6JZM7YtDJPeEnT55EB0m8jWLcsGFDdLH28OHD
        or6u7ty5E7fkhUzvCUPVrAhMCVy0aFGiaGO5evXqaPCuAC7WqqqqxG3hsmXL4i29kemsCGg9L+jFixe0
        dOnSRNHGEl85mFo4mra2NnF7ePjw4Xgrb2Q+L8h6ZtzatWsTBRtLHB/wVTUWe/bsSeyDuZ+YgOuRXMyM
        g1ZzQ/HdXMxZD77ne3s/P/iKYwJu4I/cb/ny5fGr3sjF3FBoPTt6vF8ChiK6uoob98PX08gpiUePHo1f
        8UKuZkdD62uCnp4ecQItDq5nz56NtyqOe/fuRZ8YTFF8+vRp/FMvoL+f1EDF6DALVU/IYMbbyF8Cvr9P
        njwZv2rGxYsXo3miHsnlEzJQ9YwYfgmF83rt2curV6/if3khl8+IQfVTkrdv307jylVDrp+ShOE5YRuk
        QIXhSXlTpECl5UZJrRUBw2opJkiBDgzrBRWLFOhIrDiFladKkZJfMasg1l7DGmylRLprxkmBHsRqhHk/
        RcX7S3/VRCnQk1iXE+tz5pHs1g2VAj2Kgxoud/OyugreR7Yr50qBKYg1m7F2cybPGjNoNx9rR0uBKRpW
        T5cCMzD8/YCcGP6CRo78Mv6GTCAQCAQCgUAgEAgEAoFAIBAIlDETJvwPt0YqZoF5hnsAAAAASUVORK5C
        YII=
</value>
  </data>
</root>